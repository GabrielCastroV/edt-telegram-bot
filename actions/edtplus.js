const { Telegraf } = require('telegraf');
require('dotenv').config();
const { signUp, middleware } = require('./pagos.js');
const { getDollarPrices } = require('venecodollar');
const Course = require('../models/courses.js');

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.action('plus', async (ctx) => {
    try {
        await ctx.deleteMessage();
    } catch (error) {
        console.log(error);
    }
    await ctx.telegram.sendMessage(ctx.chat.id, 'Estos son los cursos de EDT Plus disponibles:',
        {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '< Volver', callback_data: 'volver_cursos' }, { text: 'Rob√≥tica ü§ñ', callback_data: 'robotica_plus' }],
                    [],
                ],
            },
        });
});

// Funci√≥n de EDT Plus

const menuPlus = async (ctx, info, plan, funciona, costo, horarios, volver, inscribir) => {
    try {
        await ctx.deleteMessage();
    } catch (error) {
        console.log(error);
    }
    await ctx.reply(info,
        {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'Plan de Estudios', callback_data: plan }, { text: '¬øC√≥mo funciona?', callback_data: funciona }],
                    [{ text: '¬øCosto por matricula?', callback_data: costo }, { text: 'Horarios', callback_data: horarios }],
                    [{ text: '< Volver', callback_data: volver }, { text: 'Inscribirme ‚úÖ', callback_data: inscribir }],
                ],
            },
        });
};

// Payment Method.

const paymentMethod = async (ctx, inscribirse, pago_movil, volver) => {
    const info = 'Selecciona un m√©todo de pago';
    try {
        await ctx.deleteMessage();
        await ctx.reply(info,
            {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: 'Tarjeta de Cr√©dito üí≥', callback_data: inscribirse }, { text: 'Pago M√≥vil / Transferenciaüè¶', callback_data: pago_movil }],
                        [{ text: '< Volver', callback_data: volver }],
                    ],
                },
            });
    } catch (error) {
        console.log(error);
    }
};

// Debit / Pago Movil method.

const pagoMovil = async (ctx, signature, at, callback) => {
    try {
        await ctx.deleteMessage();
        const res = await getDollarPrices();
        const BCV = res[5].dollar;
        const modulePrice = await Course.find();
        const info = `
                Pago M√≥vil

CI: V-12.345.678
Banesco
0412-123456789

Transferencia:
4242-4242-4242-4242
Banesco
Rif: 123456789

${signature} (inscripci√≥n)

Total a pagar: ${(modulePrice[at].registration_price * BCV).toFixed(2)} Bs.

                `;
        await ctx.reply(info,
            {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: 'Confirmar pago ‚úÖ', callback_data: callback }],
                    ],
                },
            });

    } catch (error) {
        console.log(error);
    }
};

// Schedules and Info. (funcion)

const infoSchedules = `
Horarios disponibles Online:

1. Lunes y Martes, 9am a 12pm, inicia el 13/11/23

2. Miercoles y Jueves, 1pm a 4pm, inicia el 15/11/23

3. Sabados, 9am-12pm, inicia el 25/11/23
`;
const schedulesPlus = async (ctx, volver) => {
    try {
        await ctx.deleteMessage();
    } catch (error) {
        console.log(error);
    }
    await ctx.reply(infoSchedules,
        {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '< Volver', callback_data: volver }],
                ],
            },
        });
};

// Rob√≥tica EDT Plus

bot.action('robotica_plus', async (ctx) => {
    const info = `
    EDT Plus ü§ñüïπ

    La escuela PLUS un programa educativo para aprender tecnolog√≠a.

    El futuro es ahora, seguro escuchaste esta frase antes. Precisamente eso es la Escuela PLUS un programa educativo con futuro; dise√±ado para adolescentes entre 10 y 16 a√±os.
    
    Un programa educativo en especialidades Tech, que incluye programaci√≥n, rob√≥tica e ingl√©s.
    
    ¬øQu√© hace la escuela PLUS por ti?
    
    Te ayuda a aprender habilidades de alta demanda profesional que te ayudaran a tu desarrollo laboral en el futuro.
`;
    menuPlus(ctx, info, 'plan_de_estudios_ro', 'como_funciona_ro', 'costo_matricula_ro', 'horarios_ro', 'plus', 'metodo_pago_ro');
});
bot.action('plan_de_estudios_ro', async (ctx) => {
    try {
        await ctx.deleteMessage();
    } catch (error) {
        console.log(error);
    }
    const info = `
    Plan de Estudios:

    ‚úî Fundamentos de la programaci√≥n y rob√≥tica 
    ‚úî Programaci√≥n con Scratch
    ‚úî Programaci√≥n con C++
    ‚úî Programaci√≥n con Python
    ‚úî Mec√°nica y electr√≥nica detr√°s de la rob√≥tica
    ‚úî Rob√≥tica I ensamblado
    ‚úî Rob√≥tica II funcionamiento

    Todo mientras nos divertimos y la pasamos incre√≠ble ü•≥

    `;
    await ctx.reply(info,
        {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '< Volver', callback_data: 'robotica_plus' }],
                ],
            },
        });
});
bot.action('como_funciona_ro', async (ctx) => {
    try {
        await ctx.deleteMessage();
    } catch (error) {
        console.log(error);
    }
    const info = `
    ¬øC√≥mo funciona?

    Modalidad B-learning, tienes dos o una clase por semana y acceso a una plataforma online que le permite mantenerse en aprendizaje constante 
    `;
    await ctx.reply(info,
        {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '< Volver', callback_data: 'robotica_plus' }],
                ],
            },
        });
});
bot.action('costo_matricula_ro', async (ctx) => {
    try {
        await ctx.deleteMessage();
    } catch (error) {
        console.log(error);
    }
    const info = `
    ¬øCosto por matricula?

    Inscripci√≥n y primer mes 100 $

    Luego 5 pagos de 60 $ c/u mensuales.
    
    Total 400 $ por 6 meses de entrenamiento y desarrollo profesional.
    `;
    await ctx.reply(info,
        {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '< Volver', callback_data: 'robotica_plus' }],
                ],
            },
        });
});
bot.action('horarios_ro', async (ctx) => {
    schedulesPlus(ctx, 'robotica_plus');
});
bot.action('metodo_pago_ro', async (ctx) => {
    paymentMethod(ctx, 'inscribir_ro', 'pago_movil_ro', 'robotica_plus');
});
bot.action('pago_movil_ro', async (ctx) => {
    pagoMovil(ctx, 'Rob√≥tica ü§ñ', 6, 'hacerPago');
});
bot.action('inscribir_ro', async (ctx) => {
    signUp(ctx, 'Rob√≥tica EDT Plus ü§ñ', 6, 'https://i.imgur.com/mdpWirS.jpg');
});


bot.use(middleware);
module.exports = bot.middleware();